debug=false

# sql_database=tradeprod
# sql_user_name=trader
# sql_user_password=ledzepplin

spring.data.rest.base-path=/api

# Hibernate property values are none, validate, update, create, and create-drop.
spring.jpa.hibernate.ddl-auto=none
spring.jpa.generate-ddl=false
spring.jpa.show-sql=false
# Naming strategy
# spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect


spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.datasource.initialization-mode=always
spring.datasource.continue-on-error=false
spring.datasource.platform=mysql
spring.datasource.schema-username=root
spring.datasource.schema-password=
# spring.datasource.schema=classpath:schema/schema-${spring.datasource.platform}.sql
spring.datasource.data-username=root
spring.datasource.data-password=
# spring.datasource.data=classpath:schema/data-${spring.datasource.platform}.sql,classpath:schema/drop-create-user-${spring.datasource.platform}.sql
spring.datasource.separator=//

# To create the DB uncomment the props spring.datasource.schema/spring.datasource.data property
# Set all the user/password i.e. schema/data/datasource to root/<password>
# Set prop spring.datasource.url=jdbc:mysql://localhost:3306/ (no schema)
# Run spring boot mvnw spring-boot:run this will create the schema/data/user
# Set prop spring.datasource.url=jdbc:mysql://localhost:3306/tradeprod
# Set props spring.datasource.name=tradeprod, spring.datasource.username=trader, spring.datasource.password=ledzepplin

spring.datasource.url=jdbc:mysql://localhost:3306/tradeprod
spring.datasource.name=tradeprod
spring.datasource.username=trader
spring.datasource.password=ledzepplin